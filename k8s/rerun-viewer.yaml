apiVersion: apps/v1
kind: Deployment
metadata:
  name: rerun-viewer
  labels: { app: rerun-viewer }
spec:
  replicas: 1
  selector:
    matchLabels: { app: rerun-viewer }
  template:
    metadata:
      labels: { app: rerun-viewer }
    spec:
      containers:
        - name: rerun-viewer
          image: YOUR_REGISTRY/rerun-viewer:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          # Rerun serves a single HTTP endpoint that also upgrades to WebSockets
          readinessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rerun-viewer
  labels: { app: rerun-viewer }
spec:
  type: ClusterIP
  selector: { app: rerun-viewer }
  ports:
    - name: http
      port: 80
      targetPort: http
---
# NGINX Ingress (no TLS). Supports WebSockets by default; timeouts extended for long sessions
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rerun-viewer
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  rules:
    - host: viewer.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rerun-viewer
                port:
                  number: 80
